name: Build and Deploy Flutter Web to Vercel

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'

      - name: Flutter pub get
        run: flutter pub get

      - name: Create .env for flutter_dotenv
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          PAYMENT_API_BASE_URL: ${{ secrets.PAYMENT_API_BASE_URL }}
          RAZORPAY_KEY_ID: ${{ secrets.RAZORPAY_KEY_ID }}
          DEBUG_PAYMENTS: ${{ secrets.DEBUG_PAYMENTS }}
        run: |
          cat > .env <<EOF
          SUPABASE_URL=${SUPABASE_URL}
          SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
          API_BASE_URL=${API_BASE_URL}
          PAYMENT_API_BASE_URL=${PAYMENT_API_BASE_URL}
          RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
          DEBUG_PAYMENTS=${DEBUG_PAYMENTS}
          EOF
          ls -la .env


      - name: Build Flutter web
        run: flutter build web --release

      - name: List build output
        run: ls -la build/web

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          # Create a temporary directory for deployment
          mkdir temp-deploy
          cp -r build/web/* temp-deploy/
          
          # Create vercel.json for static site
          cat > temp-deploy/vercel.json << 'EOF'
          {
            "version": 2,
            "name": "srcarehive-web",
            "builds": [
              {
                "src": "**",
                "use": "@vercel/static"
              }
            ],
            "routes": [
              {
                "src": "/(.*)",
                "dest": "/$1"
              }
            ],
            "public": true
          }
          EOF
          
          # Deploy from temp directory
          cd temp-deploy
          npx vercel --prod --token $VERCEL_TOKEN --yes
